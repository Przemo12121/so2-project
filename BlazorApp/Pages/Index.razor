@page "/"
@using ThreadingLogic.Map
@using BlazorApp.Hubs
@using Microsoft.AspNetCore.SignalR.Client
@using ThreadingLogic.Buffers
@using ThreadingLogic.Clients
@inject IRoute Route
@inject MapSyncingHub Hub
@inject IWaitingClientsCounter Counter
@inject GoCartsBuffer Buffer
@inject NavigationManager NavigationManager
@implements IAsyncDisposable

<link href="css/Index.css" rel="stylesheet"/>

<div class="layout">
    <h1>Multithread project by Przemysław Małecki</h1>
    
    <p>Waiting clients: @Counter.CountWaitingClients().ToString()</p>
    
    <p>Free GoCarts: </p>
    <div class="buffer">
        @foreach (var goCart in Buffer.Preview())
        {
            <div class="goCart" style="background-color: @goCart" />
        }
    </div>
    
    <div>
        <!-- upper line -->
        <div class="horizontal-line">
            @for (int index = 0; index < 10; index++)
            {
                <div class="goCart" style="background-color: @Route.Map[index].Occupant?.HexColor;">
                    @Route.Map[index].Occupant?.Marker 
                </div>
            }
        </div>
        
        <!-- vertical lines -->
        <div class="vertical-line-container">
            <!-- right line -->
            <div class="vertical-line">
                @for (int index = 10; index < 14; index++)
                {
                    <div class="goCart" style="background-color: @Route.Map[index].Occupant?.HexColor;">
                        @Route.Map[index].Occupant?.Marker
                    </div>
                }
            </div>
            
            <!-- left line -->
            <div class="vertical-line" style="flex-direction: column-reverse;">
                @for (int index = 24; index < 28; index++)
                {
                    <div class="goCart" style="background-color: @Route.Map[index].Occupant?.HexColor;">
                        @Route.Map[index].Occupant?.Marker
                    </div>
                }
            </div>
        </div>
        
        <!-- lower line -->
        <div class="horizontal-line" style="flex-direction: row-reverse;">
            @for (int index = 14; index < 24; index++)
            {
                <div class="goCart" style="background-color: @Route.Map[index].Occupant?.HexColor;">
                    @Route.Map[index].Occupant?.Marker
                </div>
            }
        </div>
    </div>
</div>

@code
{
    private HubConnection? _hubConnection;
    
    protected override async Task OnInitializedAsync()
    {
        string baseUrl = NavigationManager.BaseUri;
        
        var hubUrl = baseUrl.TrimEnd('/') + MapSyncingHub.HubUrl;
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(hubUrl)
            .Build();

        _hubConnection.On("MapChanged", UpdateMap);
        
        await _hubConnection.StartAsync();
    }

    private void UpdateMap() => StateHasChanged();
    
    public async ValueTask DisposeAsync()
    {
        if (_hubConnection is not null)
        {
            await _hubConnection.DisposeAsync();
        }
    }
}